name: build-binary

on:
  push:
    branches:
      - develop
  # release:
  #   types: [published]

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: replace version
        run: cat pyproject.toml | grep version | sed 's/.*\ //g' | xargs -I@ sed -i 's/version(name)/"@"/g' src/ntfsdump/models/MetaData.py

      - name: replace packages
        run: |
          sed -i 's/from ntfsdump/from src.ntfsdump/g' src/ntfsdump/models/ImageFile.py
          sed -i 's/from ntfsdump/from src.ntfsdump/g' src/ntfsdump/models/Log.py
          sed -i 's/from ntfsdump/from src.ntfsdump/g' src/ntfsdump/models/NtfsVolume.py
          sed -i 's/from ntfsdump/from src.ntfsdump/g' src/ntfsdump/presenters/NtfsDumpPresenter.py
          sed -i 's/from ntfsdump/from src.ntfsdump/g' src/ntfsdump/views/BaseView.py
          sed -i 's/from ntfsdump/from src.ntfsdump/g' src/ntfsdump/views/NtfsDumpView.py
          sed -i 's/from ntfsdump/from src.ntfsdump/g' src/ntfsdump/__init__.py

      - name: setup poetry
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
          poetry install

      - name: build
        run: |
          poetry run pip install pyinstaller
          poetry run pyinstaller --onefile -n ntfsdump-windows src/ntfsdump/views/NtfsDumpView.py
      
      - name: verify
        run: dist/ntfsdump-windows.exe -h

      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: ntfsdump-windows
          path: dist/ntfsdump-windows.exe
